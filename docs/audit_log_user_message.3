.TH "AUDIT_LOG_USER_MESSAGE" "3" "July 2016" "Red Hat" "Linux Audit API"
.SH NAME
audit_log_user_message \- log a general user message
.SH SYNOPSIS
.nf
.B #include <libaudit.h>
.PP
.BI "int audit_log_user_message(int " audit_fd ", int " type ", const char *" message ", const char *" hostname ", const char *" addr ", const char *" tty ", int " result )"
.fi

.SH DESCRIPTION
This function will log a message to the audit system using a predefined message format. This function should be used by all ELF console apps that do not manipulate accounts or groups. If the application is written in Python or another interpreter, then use the
.I audit_log_user_comm_message
function instead. The function parameters are as follows:

.nf
\fIaudit_fd\fP - The fd returned by audit_open
\fItype\fP - type of message, ex: AUDIT_USYS_CONFIG, AUDIT_USER_LOGIN
\fImessage\fP - the message text being sent
\fIhostname\fP - the hostname if known, NULL if unknown
\fIaddr\fP - The network address of the user, NULL if unknown
\fItty\fP - The tty of the user, if NULL will attempt to figure out
\fIresult\fP - 1 is "success" and 0 is "failed"
.fi

.SH "RETURN VALUE"

It returns the sequence number which is > 0 on success or <= 0 on error.

.SH "ERRORS"

This function returns \-1 on failure. Examine errno for more info.

.SH "SEE ALSO"

.BR audit_log_user_comm_message (3),
.BR audit_log_acct_message (3),
.BR audit_log_user_avc_message (3),
.BR audit_log_semanage_message (3).

.SH AUTHOR
Steve Grubb
